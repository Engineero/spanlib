! -*- Mode: f90 -*-

SUBROUTINE pca(ff, ns, nt, nkeep, xeof, pc, ev, weights, useteof)
  integer, intent(in)  :: ns,nt
  real,    intent(in)  :: ff(ns,nt)
  integer, intent(in)  :: nkeep
  real,    intent(out) :: pc(nt,nkeep), xeof(ns,nkeep), ev(nkeep)
  real,    intent(in)  :: weights(ns)
  integer, intent(in)  :: useteof
END SUBROUTINE pca

SUBROUTINE pcarec(xeof, pc, ns, nt, nkept, ffrec, istart, iend)
  integer, intent(in)  :: ns, nt, nkept, istart, iend
  real,    intent(in)  :: xeof(ns,nkept), pc(nt,nkept)
  real,    intent(out) :: ffrec(ns,nt)
END SUBROUTINE pcarec

SUBROUTINE mssa(ff, nchan, nt, nwindow, nkeep, steof, stpc, ev)
  integer,intent(in)  :: nchan, nt, nwindow, nkeep
  real,   intent(in)  :: ff(nchan,nt)
  real,	 intent(out) :: steof(nchan*nwindow,nkeep), stpc(nt-nwindow+1,nkeep), ev(nkeep)
END SUBROUTINE mssa

SUBROUTINE mssarec(steof, stpc, nchan, nt, nkeep, nwindow, ffrec, istart, iend)
  integer,intent(in)  :: nchan, nt, nwindow, nkeep
  integer,intent(in)  :: istart, iend
  real,	  intent(in) :: steof(nchan*nwindow,nkeep), stpc(nt-nwindow+1,nkeep)
  real,   intent(out) :: ffrec(nchan,nt)
END SUBROUTINE mssarec

SUBROUTINE phasecomp(ffrec, ns, nt, np,  phases, weights, offset, firstphase)
  integer, intent(in)  :: ns, nt, np
  real,    intent(in)  :: ffrec(ns,nt)
  real,    intent(in)  :: weights(ns)
  real,    intent(in)  :: offset, firstphase
  real,    intent(out) :: phases(ns, np)
END SUBROUTINE phasecomp

SUBROUTINE pack3d(ff3d, mask, ns1, ns2, nt, ff2d, ns)
  integer, intent(in)  :: ns1, ns2, nt, ns
  real,    intent(in)  :: ff3d(ns1,ns2,nt)
  integer, intent(in)  :: mask(ns1,ns2)
  real,    intent(out) :: ff2d(ns,nt)
END SUBROUTINE pack3d

SUBROUTINE unpack3d(ff3d, mask, ns1, ns2, nt, ff2d, ns, missing_value)
  INTEGER, INTENT(in)  :: ns1, ns2, nt, ns
  REAL,    INTENT(out) :: ff3d(ns1,ns2,nt)
  INTEGER, INTENT(in)  :: mask(ns1,ns2)
  REAL,    INTENT(in)  :: ff2d(ns,nt)
  REAL                 :: missing_value
END SUBROUTINE unpack3d
